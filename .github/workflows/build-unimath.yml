name: CI Build UniMath

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    # Based on https://github.com/marketplace/actions/set-up-ocaml
    # Prime the caches every Monday
    - cron: '0 1 * * MON'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # This workflow contains four kinds of jobs:
  #   - sanity-checks
  #   - build-Unimath-ubuntu: (Linux, docker-coq, latest Coq >= 8.16, manual cache)
  #   - build-macos: (MacOS, Opam, Coq 8.16.0, cache using actions/setup-ocaml)
  #   - build-satellites: (Linux, docker-coq, Coq 8.16.x, manual cache)

  # Build the current PR/branch with the latest stable release of Coq.
  build-Unimath-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        # https://github.com/coq-community/docker-coq/wiki#ocaml-versions-policy
        coq-version: ['8.20']
        # (the following is obsolete:) coq-version: [8.16] or [latest, 8.16] (when 8.17 is released)
        ocaml-version: [default]

    name: Build on Linux (Coq ${{ matrix.coq-version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      # Grab the cache if available and extract it to dune-cache/. We tell dune
      # to use $(pwd)/dune-cache/ in the custom_script when initiating the
      # docker run.
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: dune-cache
          # Example key: UniMath-Linux-coq-8.16-123456789-10
          key: UniMath-doc-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}-${{ github.run_number }}
          restore-keys: |
            UniMath-doc-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}
            UniMath-doc-${{ runner.os }}-coq-${{ matrix.coq-version }}-
            UniMath-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}-${{ github.run_number }}
            UniMath-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}
            UniMath-${{ runner.os }}-coq-${{ matrix.coq-version }}-

      - name: Build UniMath
        uses: coq-community/docker-coq-action@v1
        with:
          coq_version: ${{ matrix.coq-version }}
          ocaml_version: ${{ matrix.ocaml-version }}
          custom_script: |
            startGroup "Workaround permission issue"
            sudo chown -R 1000:1000 .
            endGroup

            startGroup "Install the coq shim if need be"
            command -v coqc || opam install --confirm-level=unsafe-yes -j 2 coq-core
            endGroup

            startGroup "Print versions"
            opam --version
            opam exec -- dune --version
            opam exec -- coqc --version || opam exec -- rocq --version
            endGroup

            startGroup "Build UniMath"
            export DUNE_CACHE_ROOT=$(pwd)/dune-cache/
            opam exec -- dune build -j 2 --display=short \
                         --cache=enabled --error-reporting=twice
            endGroup

      - name: Revert permissions
        if: ${{ always() }}
        run: sudo chown -R 1001:116 .

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: dune-cache
          key: UniMath-doc-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}-${{ github.run_number }}

      - name: Upload the generated vo files
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: _build/default/UniMath/

  alectryon:
    name: "Build Alectryon"
    needs: build-Unimath-ubuntu
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v4

      # Grab the cache if available and extract it to alectryon-cache/.
      - uses: actions/cache/restore@v4
        with:
          path: alectryon-cache
          key: UniMath-alectryon-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}-${{ github.run_number }}
          restore-keys: |
            UniMath-alectryon-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}
            UniMath-alectryon-${{ runner.os }}-coq-${{ matrix.coq-version }}-

      - name: Download the generated vo files
        uses: actions/download-artifact@v4
        with:
          name: build
          path: _build/default/UniMath/

      - name: Build Alectryon
        uses: coq-community/docker-coq-action@v1
        with:
          coq_version: '8.20'
          ocaml_version: default
          custom_script: |
            startGroup "Install serapi"
              opam install -y coq-serapi
            endGroup

            startGroup "Install python"
              sudo apt-get update
              sudo apt-get install -y --allow-unauthenticated python3-pip python3-venv
            endGroup

            startGroup "Workaround permission issue"
              sudo chown -R 1000:1000 .
            endGroup

            startGroup "Install Alectryon"
              python3 -m venv myenv
              source myenv/bin/activate
              pip3 install --upgrade pip alectryon
            endGroup

            startGroup "Build Alectryon"
              find UniMath -name "*.v" -exec bash -c '
                f=${1%.v}.html;
                echo "compiling $1";
                time alectryon \
                  --cache-directory alectryon-cache \
                  --long-line-threshold 99999 \
                  --output "alectryon/${f//\//.}" \
                  -R _build/default/UniMath/ UniMath \
                  --sertop-arg=--no_prelude \
                  --sertop-arg=--indices-matter \
                  "$1"
              ' _ {} \;
            endGroup

      - name: Revert permissions
        if: ${{ always() }}
        run: sudo chown -R 1001:116 .

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: alectryon-cache
          key: UniMath-alectryon-${{ runner.os }}-coq-${{ matrix.coq-version }}-${{ github.run_id }}-${{ github.run_number }}

      - name: Upload the generated alectryon files
        uses: actions/upload-artifact@v4
        with:
          name: alectryon
          path: alectryon

